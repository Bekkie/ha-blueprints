esphome:
  name: dim-led
  platform: ESP8266
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "xxx"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Dim-Led Fallback Hotspot"
    password: "xxx"

captive_portal:

web_server:
  port: 80
  ota: false

globals:
   - id: dim1_up_cnt
     type: int
     restore_value: no
     initial_value: '0'
   - id: dim1_down_cnt
     type: int
     restore_value: no
     initial_value: '0'
   - id: dim2_up_cnt
     type: int
     restore_value: no
     initial_value: '0'
   - id: dim2_down_cnt
     type: int
     restore_value: no
     initial_value: '0'


output:
  - platform: esp8266_pwm
    pin: 
      number: D1
      inverted: true
    frequency: 1000 Hz
    id: pwm_output_1

  - platform: esp8266_pwm
    pin: 
      number: D6
      inverted: true
    frequency: 1000 Hz
    id: pwm_output_2


light:
  - platform: monochromatic
    output: pwm_output_1
    name: "Dim Light 1"
    id: led1
    gamma_correct: 1.4

  - platform: monochromatic
    output: pwm_output_2
    name: "Dim Light 2"
    id: led2
    gamma_correct: 2.4
    
binary_sensor:
  - platform: gpio
    pin: D4
    name: "PIR Sensor"
    device_class: motion
    
    on_press:
      then:
        - if:
            condition:
              - light.is_on: led1
            then:
              - light.turn_on:
                  id: led1
                  brightness: 100%
          
    on_release:
        - if:
            condition:
              - light.is_on: led1
            then:
              - light.turn_on:
                  id: led1
                  brightness: 30%

  - platform: gpio
    pin:
      number: D2
      mode: INPUT_PULLUP
      inverted: true
    id: button1
    # internal: true
    name: "Wall switch 1"
    
    on_click:
      then:
        light.toggle: led1

    on_press:
      then:
      - if:
          condition: 
            light.is_off: led1
          then:
          # slowly switch on
          - lambda: |-
              id(dim1_up_cnt) = 0;
          - delay: 1s
          - while:
              condition:
                and:
                  - binary_sensor.is_on: button1
                  - lambda: |-
                      return id(dim1_up_cnt) < 50;
              then:
                - light.dim_relative:
                    id: led1
                    relative_brightness: 5%
                    transition_length: 0.1s
                - lambda: |-
                    id(dim1_up_cnt) += 1;
                    ESP_LOGD("loop", "Up counter is: %d", id(dim1_up_cnt));
                - delay: 0.1s
                
          else:
          # slowly switch off
          - lambda: |-
              id(dim1_down_cnt) = 0;
          - delay: 0.3s
          - while:
              condition:
                and:
                  - binary_sensor.is_on: button1
                  - light.is_on: led1
                  - lambda: |-
                      return id(dim1_down_cnt) < 20;
              then:
                - light.dim_relative:
                    id: led1
                    relative_brightness: -5%
                    transition_length: 0.1s
                - lambda: |-
                    id(dim1_down_cnt) += 1;
                    ESP_LOGD("loop", "Down counter is: %d", id(dim1_down_cnt));
                - delay: 0.1s
    
    on_release:
      then:
      - if:
          condition: 
            - lambda: |-
                return id(dim1_up_cnt) >= 50;
          then:
            - light.turn_off: led1
            - lambda: |-
                id(dim1_up_cnt) = 0;
    
    
  - platform: gpio
    pin:
      number: D7
      mode: INPUT_PULLUP
      inverted: true
    id: button2
    # internal: true
    name: "Wall switch 2"
    
    on_click:
      then:
        light.toggle: led2

    on_press:
      then:
      - if:
          condition: 
            light.is_off: led2
          then:
          - lambda: |-
              id(dim2_up_cnt) = 0;
          - delay: 1s
          - while:
              condition:
                and:
                  - binary_sensor.is_on: button2
                  - lambda: |-
                      return id(dim2_up_cnt) < 50;
              then:
                - light.dim_relative:
                    id: led2
                    relative_brightness: 5%
                    transition_length: 0.1s
                - lambda: |-
                    id(dim2_up_cnt) += 1;
                    ESP_LOGD("loop", "Up counter is: %d", id(dim2_up_cnt));
                - delay: 0.1s
                
          else:
          - lambda: |-
              id(dim2_down_cnt) = 0;
          - delay: 0.3s
          - while:
              condition:
                and:
                  - binary_sensor.is_on: button2
                  - light.is_on: led2
                  - lambda: |-
                      return id(dim2_down_cnt) < 20;
              then:
                - light.dim_relative:
                    id: led2
                    relative_brightness: -5%
                    transition_length: 0.1s
                - lambda: |-
                    id(dim2_down_cnt) += 1;
                    ESP_LOGD("loop", "Down counter is: %d", id(dim2_down_cnt));
                - delay: 0.1s

    on_release:
      then:
      - if:
          condition: 
            - lambda: |-
                return id(dim2_up_cnt) >= 50;
          then:
            - light.turn_off: led2
            - lambda: |-
                 id(dim2_up_cnt) = 0;
